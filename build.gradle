plugins {
    id "architectury-plugin" version "[3.4, 3.5["
    id "dev.architectury.loom" version "[1.5, 1.6[" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        mappings loom.officialMojangMappings()
        // The following line declares the yarn mappings you may select this one as well.
        // mappings "net.fabricmc:yarn:1.20.1+build.10:v2"
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    base {
        archivesName = rootProject.archives_base_name
    }

    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        maven { url = uri("https://jitpack.io") }
        maven { url = uri("https://squiddev.cc/maven") }
        maven { url = uri("https://maven.terraformersmc.com") }
        maven { url = uri("https://maven.terraformersmc.com/releases") }
        maven { url = uri("https://maven.shedaniel.me") }
        maven { url = uri("https://maven.blamejared.com") }
        maven { url = uri("https://mvn.devos.one/snapshots") }
        maven { url = uri("https://maven.ladysnake.org/releases") }
        maven { url = uri("https://thedarkcolour.github.io/KotlinForForge") }
        maven { url = uri("https://maven.theillusivec4.top") }
        maven { url = uri("https://dl.cloudsmith.io/public/geckolib3/geckolib/maven") }
        maven { url = uri("https://maven.parchmentmc.org") }
        exclusiveContent {
            forRepository {
                maven { url = uri("https://api.modrinth.com/maven") }
            }
            filter {
                includeGroup("maven.modrinth")
            }
        }
        flatDir {
            dir("libs")
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }
}
